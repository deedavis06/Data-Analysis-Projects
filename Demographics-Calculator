import pandas as pd


def calculate_demographic_data(print_data=True):
    # Read data from file
    df = pd.read_csv(r"adult.data.csv")
    

    # How many of each race are represented in this dataset? This should be a Pandas series with race names as the index labels.
    race_count = df['race'].value_counts()
    

    # What is the average age of men?
    average_age=df[['sex','age']].groupby('sex').mean()
    average_age_men=round(average_age.loc['Male'], 1)
    
 
    # What is the percentage of people who have a Bachelor's degree?
    ed = len(df[df['education'] == 'Bachelors'])
    percentage_bachelors = round(ed/len(df) *100, 1)
    
   
    # What percentage of people with advanced education (`Bachelors`, `Masters`, or `Doctorate`) make more than 50K?
    higher_ed= df[df['education'].isin(['Bachelors', 'Masters', 'Doctorate'])]
    higher_education_rich=round(higher_ed.loc[(df['salary']=='>50K')].shape[0]/higher_ed.shape[0]*100, 1)
    
     # What percentage of people without advanced education make more than 50K?
    lower_ed=df[~df['education'].isin(['Bachelors', 'Masters', 'Doctorate'])]
    lower_education_rich=round(lower_ed.loc[(df['salary']=='>50K')].shape[0]/lower_ed.shape[0]*100, 1)
    
    
    # What is the minimum number of hours a person works per week (hours-per-week feature)?
    min_work_hours=df['hours-per-week'].min()

    # What percentage of the people who work the minimum number of hours per week have a salary of >50K?
    min_hours=df[['hours-per-week', 'salary']]
    num_min_hr=min_hours['hours-per-week'] == 1
    num_min_workers=(min_hours['hours-per-week'] == 1) & (min_hours['salary'] == '>50K')
    rich_percentage=round((min_hours[num_min_workers].shape[0]/min_hours[num_min_hr].shape[0]*100))


    # What country has the highest percentage of people that earn >50K?
    con_count=df['native-country'].value_counts()
    con_earning=df[df['salary']== '>50K']['native-country'].value_counts()
    
    highest_earning_country=(con_earning/con_count*100).idxmax()
    highest_earning_country_percentage= round((con_earning/con_count).max()*100, 1)


    # Identify the most popular occupation for those who earn >50K in India.
    oc_india=df[(df['native-country'] == 'India') & (df['salary']== '>50K')]
    top_IN_occupation = oc_india['occupation'].value_counts().idxmax()

    

    # DO NOT MODIFY BELOW THIS LINE

    if print_data:
        print("Number of each race:\n", race_count) 
        print("Average age of men:", average_age_men)
        print(f"Percentage with Bachelors degrees: {percentage_bachelors}%")
        print(f"Percentage with higher education that earn >50K: {higher_education_rich}%")
        print(f"Percentage without higher education that earn >50K: {lower_education_rich}%")
        print(f"Min work time: {min_work_hours} hours/week")
        print(f"Percentage of rich among those who work fewest hours: {rich_percentage}%")
        print("Country with highest percentage of rich:", highest_earning_country)
        print(f"Highest percentage of rich people in country: {highest_earning_country_percentage}%")
        print("Top occupations in India:", top_IN_occupation)

    return {
        'race_count': race_count,
        'average_age_men': average_age_men,
        'percentage_bachelors': percentage_bachelors,
        'higher_education_rich': higher_education_rich,
        'lower_education_rich': lower_education_rich,
        'min_work_hours': min_work_hours,
        'rich_percentage': rich_percentage,
        'highest_earning_country': highest_earning_country,
        'highest_earning_country_percentage':
        highest_earning_country_percentage,
        'top_IN_occupation': top_IN_occupation
    }
